//============================================================================
// Name        : ImagePreprocessor.cpp
// Author      : Nate Sutton
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
// from http://docs.opencv.org/doc/tutorials/introduction/display_image/display_image.html
//============================================================================

#include <opencv2/core/core.hpp>
#include <opencv2/imgcodecs.hpp>
#include <opencv2/highgui/highgui.hpp>

#include <iostream>
#include <string>

using namespace cv;

using namespace std;

int main() {
    //! [load]
    const char imageName[19] = "breastsOutline.jpg"; // by default
    //const cv::String imageName3 = "breastsOutline.jpg";
    /*if( argc > 1)
    {
        imageName = argv[1];
    }*/
    //! [load]

    //! [mat]
    Mat image;
    image = imread( argv[1], 1 );
    //! [mat]

    //! [imread]
    //image = imread(imageName.c_str(), IMREAD_COLOR); // Read the file
    //Mat imread(const String& filename, int flags=IMREAD_COLOR );
    //Mat image2 = imread(const String& imageName3, int flags=IMREAD_COLOR );
    //image = imread("breastsOutline.jpg", CV_LOAD_IMAGE_COLOR);
    //image = imread(const String& imageName, int flags=CV_LOAD_IMAGE_COLOR);
    //image = imread(imageName, CV_LOAD_IMAGE_COLOR);
    //image = imread("breastsOutline.jpg", 1);
    //IplImage *img=cvLoadImage("brain_mri_00%j.jpg", CV_LOAD_IMAGE_GRAYSCALE);
    //CvMat* cvLoadImageM(const char* imageName, int iscolor=CV_LOAD_IMAGE_COLOR);
    //! [imread]

    if( image.empty() )                      // Check for invalid input
    {
        cout <<  "Could not open or find the image" << std::endl ;
        //cv::waitKey(5000);
        return -1;
    }

    //! [window]
    //namedWindow( "Display window", WINDOW_AUTOSIZE ); // Create a window for display.
    int cvNamedWindow(const char* name, int flags=CV_WINDOW_AUTOSIZE );
    //! [window]

    //! [imshow]
    //imshow( "Display window", image );                // Show our image inside it.
    void cvShowImage(const char* name, const CvArr* image);
    //! [imshow]

    //! [wait]
    //waitKey(0); // Wait for a keystroke in the window
    int cvWaitKey(int delay=0 );
    //cv::waitKey(5000);
    //! [wait]
	cout << "done";
    return 0;
}
